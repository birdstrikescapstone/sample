"M.FL.TEMP" = result$list$main.feels_like,
"M.TEMP.MIN" = result$list$main.temp_min,
"M.TEMP.MAX" = result$list$main.temp_max,
"M.PRES" = result$list$main.pressure,
"M.SLP" = result$list$main.sea_level,
"M.HUM" = result$list$main.humidity,
"M.CL" = result$list$clouds.all,
"M.WS" = result$list$wind.speed,
"M.WD" = result$list$wind.deg,
"3H.RAIN" = result$list$rain.3h)
View(temp)
forecast<-data.frame("DATE" =  lubridate::ymd_hms(result$list$dt_txt),
"M.TEMP" = result$list$main.temp,
"M.FL.TEMP" = result$list$main.feels_like,
"M.TEMP.MIN" = result$list$main.temp_min,
"M.TEMP.MAX" = result$list$main.temp_max,
"M.PRES" = result$list$main.pressure,
"M.SLP" = result$list$main.sea_level,
"M.HUM" = result$list$main.humidity,
"M.CL" = result$list$clouds.all,
"M.WS" = result$list$wind.speed,
"M.WD" = result$list$wind.deg,
"3H.RAIN" = result$list$rain.3h)
owmr_as_tibble(result, simplify = TRUE)
forecast<-owmr_as_tibble(result, simplify = TRUE)
View(forecast)
runApp()
add_weather
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 9.5, lat = coord[1,2], lng = coord[1,3]) %>%
addProviderTiles(providers$OpenWeatherMap.Precipitation,
options=providerTileOptions(apiKey="99f521810d0fef37f59930f36dbb2256")) %>%
addProviderTiles(providers$OpenWeatherMap.Rain,
options=providerTileOptions(apiKey="99f521810d0fef37f59930f36dbb2256")) %>%
addMarkers(lng = air$longitude, lat = air$latitude, popup = names(air)) %>%
add_weather(lng = air$longitude, lat = air$latitude,icon = owm_data$weather_icon )
# birds2 <- spocc::occ(from = "ebird",
#                        ebirdopts = list(method = "ebirdgeo",
#                                         species = NULL,
#                                         lat = air[1,3],
#                                         lng = air[1,2],
#                                         back = 30,
#                                         dist = as.numeric(
#                                           units::set_units(dist, "mi"))))
#
# mapr::map_leaflet(birds2,
#                   color = "blues9",
#                   lat = birds2$ebird$meta$opts$lat,
#                   lng = birds2$ebird$meta$opts$lat)
# Group by zipcode and sum of offense counts
# heatmap.by.zipcode <-
#   crime_data %>% dplyr::select(zip, latitude, longitude,offense_count) %>%
#   group_by(
#     zip,
#     latitude,
#     longitude
#   ) %>%  dplyr::summarize(Count = sum(offense_count)) %>%
#   arrange(desc(Count))
# add a dark matter map and display the intensity
#install.packages("units")
library(rebird)
EBIRD_KEY <- 'ldto4uofjnf7'
dist <- 20
#region_codes = ['US-CO-031','US-CO-001','US-CO-005', 'US-CO-059']
birds <- rebird::ebirdgeo(species = NULL,
lat = air[1,2],
lng = air[1,3],
back = 30,
dist = as.numeric(
units::set_units(dist, "mi")),
key = EBIRD_KEY)
birds<-birds %>% group_by(lat,lng) %>%
summarise(howMany = sum(howMany))
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(lng = air$longitude, lat = air$latitude,icon = owm_data$weather_icon )
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(lng = air[1,2], lat = air[1,3],icon = owm_data$weather_icon)
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(lng = air[1,2], lat = air[1,3],icon = owm_data$weather_icon) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(lng = air[1,2], lat = air[1,3]) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(lng = air[1,2], lat = air[1,3]) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(birds,lng = air[1,2], lat = air[1,3]) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(birds,lng = air[1,2], lat = air[1,3]) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(forecast) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(results) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(result) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(forecast) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(result) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(result,template = "<b>{{name}}</b>") %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
leaflet(birds) %>% addProviderTiles(providers$OpenStreetMap) %>%
setView(zoom = 11, lat = air[1,2], lng = air[1,3]) %>%
addCircleMarkers(air[1,2],air[1,3]) %>%
owmr::add_weather(result,lat = air[1,2], lng = air[1,3]) %>%
leaflet.extras::addHeatmap(
lat = ~ birds$lat,
lng = ~ birds$lng,
blur = 20,
max = 0.05,
radius = 15)
View(result)
View(result)
#---------------------------- Pilot App -----------------------------
#R User Interface
dashboardPage(skin = "blue",
dashboardHeader(title = "Birdstrikes"),
#Sidebar for inputs
dashboardSidebar(
sidebarMenu(
menuItem("Pilot Dashboard", tabName = "Inputs", icon = icon("dashboard")),
selectInput("airfield","Airfields:",
airfields),
dateInput("date","Date:",
value = as.character(Sys.Date()),
min = as.character(Sys.Date()),
max = Sys.Date()+500),
menuItem("About WTF!", tabName = "Inputs", icon = icon("users"))
)
),
#Body
dashboardBody(
fluidRow(
box(uiOutput("tag"),
width = 4,
height = 3),
valueBoxOutput("box_01"),
bsModal("mod","Report a Strike","btn")
),
fluidRow(
infoBoxOutput("vboxrisk"),
valueBoxOutput("vboxstrikes"),
valueBoxOutput('vboxengf')),
# actionButton(inputId='vboxengf', label="Learn More",
#                           icon = icon("bird"),
#                           onclick ="window.open('https://wildlife.faa.gov/add')"))
fluidRow(
shinydashboard::box(id = "second",leaflet::leafletOutput("map")),
align="Left", tags$img(src='images/2 Logo.png', width = "400px")),
# fluidRow(
#   box(tableOutput("summary"),
#   width = 4,
#   background = "light-blue",
#   p("This is content. The background color is set to light-blue")))
# ,fluidRow(
#   align="LEFT", tags$img(src='images/1 Logo.png', width = "300px")
# ),
)
)
runApp()
runApp()
runApp()
runApp()
#---------------------------- Pilot App -----------------------------
#R User Interface
dashboardPage(skin = "blue",
dashboardHeader(title = "Birdstrikes"),
#Sidebar for inputs
dashboardSidebar(
sidebarMenu(
menuItem("Pilot Dashboard", tabName = "Inputs", icon = icon("dashboard")),
selectInput("airfield","Airfields:",
airfields),
dateInput("date","Date:",
value = as.character(Sys.Date()),
min = as.character(Sys.Date()),
max = Sys.Date()+500),
menuItem("About WTF!", tabName = "Inputs", icon = icon("users"))
)
),
#Body
dashboardBody(
fluidRow(
box(uiOutput("tag"),
width = 4,
height = 3),
valueBoxOutput("box_01"),
bsModal("mod","Report a Strike","btn")
),
fluidRow(
infoBoxOutput("vboxrisk"),
valueBoxOutput("vboxstrikes"),
valueBoxOutput('vboxengf')),
# actionButton(inputId='vboxengf', label="Learn More",
#                           icon = icon("bird"),
#                           onclick ="window.open('https://wildlife.faa.gov/add')"))
fluidRow(box(tags$style(type = "text/css", "html, body {width:100%;height:200%}"),
leaflet::leafletOutput("map"),
absolutePanel(id="controls",
style="z-index:500;",
class = "panel panel-default",
draggable = TRUE),
width = 12)
),
# fluidRow(
#   box(tableOutput("summary"),
#   width = 4,
#   background = "light-blue",
#   p("This is content. The background color is set to light-blue")))
# ,fluidRow(
#   align="LEFT", tags$img(src='images/1 Logo.png', width = "300px")
# ),
)
)
runApp()
#---------------------------- Pilot App -----------------------------
#R User Interface
dashboardPage(skin = "blue",
dashboardHeader(title = "Birdstrikes"),
#Sidebar for inputs
dashboardSidebar(
sidebarMenu(
menuItem("Pilot Dashboard", tabName = "Inputs", icon = icon("dashboard")),
selectInput("airfield","Airfields:",
airfields),
dateInput("date","Date:",
value = as.character(Sys.Date()),
min = as.character(Sys.Date()),
max = Sys.Date()+500),
menuItem("About WTF!", tabName = "Inputs", icon = icon("users"))
)
),
#Body
dashboardBody(
fluidRow(
box(uiOutput("tag"),
width = 4,
height = 3),
valueBoxOutput("box_01"),
bsModal("mod","Report a Strike","btn")
),
fluidRow(
infoBoxOutput("vboxrisk"),
valueBoxOutput("vboxstrikes"),
valueBoxOutput('vboxengf')),
# actionButton(inputId='vboxengf', label="Learn More",
#                           icon = icon("bird"),
#                           onclick ="window.open('https://wildlife.faa.gov/add')"))
fluidRow(box(tags$style(type = "text/css", "html, body {width:100%;height:200%}"),
leaflet::leafletOutput("map"),
absolutePanel(id="controls",
style="z-index:500;",
class = "panel panel-default",
draggable = TRUE),
width = 12,
style = "height:200px;")
),
# fluidRow(
#   box(tableOutput("summary"),
#   width = 4,
#   background = "light-blue",
#   p("This is content. The background color is set to light-blue")))
# ,fluidRow(
#   align="LEFT", tags$img(src='images/1 Logo.png', width = "300px")
# ),
)
)
runApp()
runApp()
#---------------------------- Pilot App -----------------------------
#R User Interface
dashboardPage(skin = "blue",
dashboardHeader(title = "Birdstrikes"),
#Sidebar for inputs
dashboardSidebar(
sidebarMenu(
menuItem("Pilot Dashboard", tabName = "Inputs", icon = icon("dashboard")),
selectInput("airfield","Airfields:",
airfields),
dateInput("date","Date:",
value = as.character(Sys.Date()),
min = as.character(Sys.Date()),
max = Sys.Date()+500),
menuItem("About WTF!", tabName = "Inputs", icon = icon("users"))
)
),
#Body
dashboardBody(
fluidRow(),
fluidRow(
infoBoxOutput("vboxrisk"),
valueBoxOutput("vboxstrikes"),
valueBoxOutput('vboxengf')),
# actionButton(inputId='vboxengf', label="Learn More",
#                           icon = icon("bird"),
#                           onclick ="window.open('https://wildlife.faa.gov/add')"))
fluidRow(
# box(tags$style(type = "text/css", "html, body {width:100%;height:200%}"),
#            leaflet::leafletOutput("map"),
#            absolutePanel(id="controls",
#                          style="z-index:500;",
#                          class = "panel panel-default",
#                          draggable = TRUE),
#            width = 12)
column(12,
box(
width = 9,
title = "Map of Airfield:",
status = "primary",
solidHeader = TRUE,
collapsible = FALSE,
height = "100%",
leafletOutput(outputId = "map", width="100%", height = 940, "center")),
)
),
# fluidRow(
#   box(tableOutput("summary"),
#   width = 4,
#   background = "light-blue",
#   p("This is content. The background color is set to light-blue")))
# ,fluidRow(
#   align="LEFT", tags$img(src='images/1 Logo.png', width = "300px")
# ),
)
)
runApp()
runApp()
owm_data <- find_city("Malaga", units = "metric") %>%
owmr_as_tibble()
map <- leaflet() %>% addTiles() %>%
add_weather(
owm_data,
template = "<b>{{name}}</b>, {{temp}}<c2><b0>C",
icon = owm_data$weather_icon
)
map
owm_data <- result %>%
owmr_as_tibble()
map <- leaflet() %>% addTiles() %>%
add_weather(
owm_data,
template = "<b>{{name}}</b>, {{temp}}<c2><b0>C",
icon = owm_data$weather_icon
)
owm_data <- find_city("Malaga", units = "metric") %>%
owmr_as_tibble()
View(owm_data)
owm_data <- owmr::get_forecast(city=states[i], unit = "imperial") %>%
owmr_as_tibble()
result <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial")
owm_data <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial") %>%
owmr_as_tibble()
View(owm)
map <- leaflet() %>% addTiles() %>%
add_weather(
owm_data,
template = "<b>{{name}}</b>, {{temp}}<c2><b0>C",
icon = owm_data$weather_icon
)
owm_data <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial") %>%
owmr_as_tibble()
View(owm_data)
result <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial")
owm_data <- find_city("Malaga", units = "metric") %>%
owmr_as_tibble()map <- leaflet() %>% addTiles() %>%
owm_data <- find_city("Malaga", units = "metric") %>%
owmr_as_tibble()
result <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial") %>%
owmr_as_tibble()
owm_data <- find_city("Malaga", units = "metric") %>%
owmr_as_tibble()
result <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial") %>%
owmr_as_tibble()
View(result)
View(owm_data)
owm_data <- find_city("Denver", units = "metric") %>%
owmr_as_tibble()
map <- leaflet() %>% addTiles() %>%
add_weather(
owm_data,
template = "<b>{{name}}</b>, {{temp}}<c2><b0>C",
icon = owm_data$weather_icon)
map
result <- owmr::get_forecast(lat = air[1,2], lon = air[1,3], units = "imperial") %>%
owmr_as_tibble()
owm_data <- find_city(lat = air[1,2], lng = air[1,3], units = "imperial") %>%
owmr_as_tibble()
owm_data <- find_city("Denver", units = "imperial") %>%
owmr_as_tibble()
owm_data <- find_city("Denver Colorado", units = "imperial") %>%
owmr_as_tibble()
metric
imperial
owm_data <- find_city("Denver", units = "imperial") %>%
owmr_as_tibble()
map <- leaflet() %>% addTiles() %>%
add_weather(
owm_data,
template = "<b>{{name}}</b>, {{temp}}<c2><b0>C",
icon = owm_data$weather_icon)
map
owm_data <- find_city(lat =air[1,2] , lon = air[1,3] , units = "imperial") %>%
owmr_as_tibble()
map <- leaflet() %>% addTiles() %>%
add_weather(
owm_data,
template = "<b>{{name}}</b>, {{temp}}<c2><b0>F",
icon = owm_data$weather_icon)
map
runApp()
shiny::runApp()
runApp()
runApp()
